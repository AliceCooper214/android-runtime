apply plugin: 'java-library'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    google()
    mavenCentral()
}

dependencies {
    api "org.ow2.asm:asm:${asm_version}"
    api "org.ow2.asm:asm-util:${asm_util_version}"
    api "org.apache.bcel:bcel:${bcel_version}"
    api group: 'org.json', name: 'json', version: "${json_version}"
    api "commons-io:commons-io:${commons_io_version}"
    api "com.google.code.gson:gson:${gson_version}"
    api "com.google.googlejavaformat:google-java-format:${google_java_format_version}"

    testImplementation "com.google.code.gson:gson:${gson_version}"
    testImplementation "junit:junit:${junit_version}"
    testImplementation "org.mockito:mockito-core:${mockito_core_version}"
}

compileJava {
    if (!findProject(':dts-generator').is(null)) {
        dependsOn ':dts-generator:copyJarToBuildTools'
    }
    options.compilerArgs << "-Xlint:all" << "-Xlint:-options" << "-Werror"
}

task copyJarToBuildTools (type: Copy) {
    inputs.file("$projectDir/build/libs/static-binding-generator.jar")
    from "$projectDir/build/libs/static-binding-generator.jar"
    into "$projectDir/../"
}

jar {

    configurations.implementation.setCanBeResolved(true)
    configurations.runtimeOnly.setCanBeResolved(true)
    configurations.api.setCanBeResolved(true)

    manifest {
        attributes("Manifest-Version": "1.0",
                "Main-Class": "org.nativescript.staticbindinggenerator.Main")
    }
    from {

        configurations.implementation.collect {
            it.isDirectory() ? it : zipTree(it)
        }

        configurations.runtimeOnly.collect {
            it.isDirectory() ? it : zipTree(it)
        }

        configurations.api.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    duplicatesStrategy = 'include'
}

jar.finalizedBy(copyJarToBuildTools)