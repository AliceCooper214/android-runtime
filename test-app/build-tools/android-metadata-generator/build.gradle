apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

if(!project.hasProperty("loadedProjectDeps")){
    Properties projectDeps = new Properties()
    projectDeps.load(new FileInputStream("$project.rootDir/gradle.properties"))
    projectDeps.each { prop ->
        project.ext.set(prop.key, prop.value)
    }
    project.ext.loadedProjectDeps = true
}

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$ANDRIOD_BUILD_TOOLS_VERSION"
    }
}

sourceSets {
    main {
        java {
            srcDir 'src/src'
        }
        kotlin {
            srcDirs += 'src/src'
        }
    }
}

compileJava {
    options.compilerArgs << "-Xlint:all" << "-Xlint:-options" << "-Werror"
}

compileJava.outputs.dir("$rootDir/dist/classes")

compileKotlin {
    kotlinOptions.allWarningsAsErrors = true
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    google()
    mavenCentral()
}

dependencies {
    api "org.apache.bcel:bcel:${bcel_version}"
    api "com.google.code.gson:gson:${gson_version}"
    api group: 'org.jetbrains.kotlinx', name: 'kotlinx-metadata-jvm', version: "${kotlinx_metadata_jvm_version}"
    implementation files("./src/libs/dx.jar")

    testImplementation "junit:junit:${junit_version}"
    testImplementation "org.mockito:mockito-core:${mockito_core_version}"
}

task copyNecessaryFiles {
	doLast {
		copy {
			from "$rootDir/helpers"
			into "$rootDir/dist/bin"
		}

		copy {
			from "$rootDir/package.json"
			into "$rootDir/dist"
		}
	}
}

jar {
    configurations.api.setCanBeResolved(true)
    manifest {
        attributes("Manifest-Version": "2.0",
                   "Main-Class": "com.telerik.metadata.Generator")
    }

    from {
        configurations.api.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    duplicatesStrategy = 'include'
}

task copyJarToBuildTools (type: Copy) {
	from "$projectDir/build/libs/android-metadata-generator.jar"
	into "$projectDir/../"
}

jar.finalizedBy(copyJarToBuildTools)



